import{q as t,c as s,w as a,b as e,f as r,l as o,g as c,r as i,u as n,h as l,i as u,j as d,s as h,a as g,k as w,m as p,n as f}from"./firebase-BOKyl3KT.js";import{d as b,s as m}from"./firebase-BS6BjUNz.js";const y=async(t,s)=>{try{const a=t.name.split(".").pop(),e=`${Date.now()}_${Math.random().toString(36).substr(2,9)}.${a}`,r=i(m,`blog-images/${s}/${e}`),o=await n(r,t);return await l(o.ref)}catch(a){throw a}},C=async t=>{try{const s=i(m,t);await f(s)}catch(s){throw s}},L=async t=>{try{return(await g(s(b,"blogs"),{...t,createdAt:h(),updatedAt:h()})).id}catch(a){throw a}},D=async(t,s)=>{try{const a=u(b,"blogs",t);await d(a,{...s,updatedAt:h()})}catch(a){throw a}},A=async t=>{try{const s=await w(u(b,"blogs",t));if(s.exists()){const t=s.data();t.featuredImage&&await C(t.featuredImage),t.images&&await Promise.all(t.images.map(t=>C(t)))}await p(u(b,"blogs",t))}catch(s){throw s}},$=async(e,r)=>{try{if(!e||""===e.trim())return null;const l=e.trim(),u=`slug.${r}`;try{const e=t(s(b,"blogs"),a(u,"==",l),a("published","==",!0),o(1)),r=await c(e);if(!r.empty){const t=r.docs[0];return{id:t.id,...t.data()}}try{const e=t(s(b,"blogs"),a("published","==",!0),o(50)),r=await c(e);for(const t of r.docs){const s=t.data();if(s.slug){if(Object.values(s.slug).includes(l))return{id:t.id,...s}}}}catch(i){}return null}catch(n){try{const t=await c(s(b,"blogs"));for(const s of t.docs){const t=s.data();if(t.published&&t.slug&&(t.slug[r]===l||Object.values(t.slug).includes(l)))return{id:s.id,...t}}return null}catch(i){throw i}}}catch(l){throw l}},j=async(i={})=>{try{let n=t(s(b,"blogs"));void 0!==i.published&&(n=t(n,a("published","==",i.published))),i.tags&&i.tags.length>0&&(n=t(n,a("tags","array-contains-any",i.tags))),n=!0===i.published?t(n,e("publishedAt","desc")):t(n,e("updatedAt","desc")),i.lastDoc&&(n=t(n,r(i.lastDoc)));const l=i.limit||10;n=t(n,o(l+1));const u=await c(n),d=[],h=u.docs,g=h.slice(0,l);for(const t of g){const s={id:t.id,...t.data()};if(i.searchTerm){const t=i.searchTerm.toLowerCase(),a=s.title.en.toLowerCase().includes(t)||s.title.he.toLowerCase().includes(t),e=s.content.en.toLowerCase().includes(t)||s.content.he.toLowerCase().includes(t),r=s.excerpt.en.toLowerCase().includes(t)||s.excerpt.he.toLowerCase().includes(t);(a||e||r)&&d.push(s)}else d.push(s)}return{posts:d,hasMore:h.length>l,lastDoc:h.length>l?h[l-1]:void 0}}catch(n){throw n}},S=async()=>{try{const t=await c(s(b,"blogs")),a=new Set;return t.docs.forEach(t=>{const s=t.data();s.tags&&s.tags.forEach(t=>a.add(t))}),Array.from(a).sort()}catch(t){throw t}},v=t=>{const s=t.trim().split(/\s+/).length;return Math.ceil(s/200)},x=t=>{if(!t||""===t.trim())return"untitled-"+Date.now().toString().slice(-6);if(/[\u0590-\u05FF]/.test(t)){return t.trim().replace(/\s+/g,"-").replace(/[^\u0590-\u05FF\w\s-]/g,"").replace(/-+/g,"-")||"hebrew-post-"+Date.now().toString().slice(-6)}return t.toLowerCase().replace(/[^\w\s-]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-").trim()||"post-"+Date.now().toString().slice(-6)};export{S as a,$ as b,x as c,v as d,D as e,L as f,j as g,A as h,y as u};
